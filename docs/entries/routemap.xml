<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="routemap" namespace="fn" type="widget" widgetnamespace="mobile" event-prefix="routemap">
	<title>Routemap Widget</title>
	<desc>Creates a routemap widget.</desc>
	<longdesc>
		<h3>Route Map</h3>
		<p>Routemap is a jquery mobile plugin to render a route data.</p>
		<p>Routemap supports JSON format for DB. So, It will be able to set DB by setting a file path or a variable on the widget. And it drawing the line between two stations automatically to use DB. It allows user to change each style for stations, routes, and labels to modify DB.</p>
		<p>Routemap can indicated the shortest route between two stations that user selected. And also it supports a multi-language.</p>

<pre><code>
&lt;div data-role=&quot;routemap&quot; data-db=&quot;data.json&quot;&gt;
&lt;/div&gt;
</code></pre>

	</longdesc>

	<added>0.3.0</added>
	<options>
		<option name="db" default="null" example-value="&quot;data.json&quot;">
			<desc>
				<p>The URL of a JSON file or a javascript variable to load.</p>
			</desc>
			<type name="String" />
		</option>
		<option name="language" default="null" example-value="&quot;en&quot;">
			<desc>
				<p>Determine the current languauge. The values must be the abbreviation of language names(ex: English > en )</p>
			</desc>
			<type name="String" />
		</option>
		<option name="unit" default="1" example-value='10'>
			<desc>
				<p>The length unit of the route map. If the value is 10 and a station coordinate is (1, 2) then the station will be displayed at (10, 20).</p>
			</desc>
			<type name="Integer" />
		</option>
	</options>
	<events>
		<event name="create">
			<desc>Triggered when a widget is created.
			</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
	</events>
	<methods>
		<method name="getIdsByName">
			<desc>Gets an array of station or line ids associated with the specified station or line name.
			</desc>
				<argument name="name" type="String">
					<desc>The name of staion or line</desc>
				</argument>
		</method>
		<method name="getNameById">
			<desc>Gets a string of station or line name with associated the specified station or line id.
			</desc>
				<argument name="code" type="String">
					<desc>The code of staion or line</desc>
				</argument>
		</method>
		<method name="shortestRoute">
			<desc>Returns the array of station ids which is the shortest route from source to destination.
			</desc>
				<argument name="source" type="String">
					<desc>The staion id of source</desc>
				</argument>
				<argument name="destination" type="String">
					<desc>The staion id of destination</desc>
				</argument>
		</method>
		<method name="minimumTransfers">
			<desc>Returns the array of station ids which is the route having minimum transfers from source to destination.
			</desc>
				<argument name="source" type="String">
					<desc>The staion id of source</desc>
				</argument>
				<argument name="destination" type="String">
					<desc>The staion id of destination</desc>
				</argument>
		</method>
		<method name="highlight">
			<desc>Adds a highlighting style to stations.
			</desc>
				<argument name="stations" type="Array">
					<desc>The array of staion ids</desc>
				</argument>
		</method>
		<method name="dishighlight">
			<desc>Removes a highlighting style from stations.
			</desc>
				<argument name="stations" type="Array">
					<desc>The array of staion ids</desc>
				</argument>
		</method>
		<method name="refresh" example-params="options">
			<desc>Resizes&amp;redraws the widget, after having made some external modifications.
			</desc>
				<argument name="redraw" default='false' type="Boolean">
					<desc>When set to true, the widget will redraw all of elements by a route data.<br />Only re-layout the widget if set to false.</desc>
				</argument>
		</method>
	</methods>
	<example>
		<desc>A basic example of a page with routemap.</desc>
		<html><![CDATA[<div data-role="header">
		<h1>Web UI Framework Example</h1>
	</div>
	<div data-role="content">
		<script>
			var DB_DATA = {
				"name": "Example Route Map",
				"exchangeStyle": {
					"fill": "white",
					"stroke": "gray"
				},
				"lines": [{
					"name": "Line 1",
					"style": {
						"line" : { "stroke": "rgb(85, 85, 85)" },
						"station": { "stroke": "rgb(85, 85, 85)" }
					},
					"stations": [
						[
							{ "code": "1", "coordinates": [ 1, 2 ], "label": { "text": "station1", "position": "ne", "angle": 45 } },
							{ "code": "2", "coordinates": [ 2, 2 ], "label": { "text": "station2(ex)", "position": "ne", "angle": 45 } },
							{ "code": "3", "coordinates": [ 3, 2 ], "label": { "text": "station3", "position": "ne", "angle": 45 } }
						]
					]
				}, {
					"name": "Line 2",
					"style": {
						"line" : { "stroke": "rgb(95, 178, 33)" },
						"station": { "stroke": "rgb(95, 178, 33)" }
					},
					"stations": [
						[
							{ "code": "4", "coordinates": [ 2, 1 ], "label": { "text": "station4", "position": "ne", "angle": 45 } },
							{ "code": "5", "coordinates": [ 2, 2 ], "label": { "text": "station2(ex)", "position": "ne", "angle": 45 } },
							{ "code": "6", "coordinates": [ 2, 3 ], "label": { "text": "station5", "position": "ne", "angle": 45 } },
							{ "code": "7", "coordinates": [ 3, 3 ], "label": { "text": "station6", "position": "ne", "angle": 45 } },
							{ "code": "8", "coordinates": [ 3, 4 ], "label": { "text": "station7", "position": "ne", "angle": 45 } }
						]
					]
				}]
			};
		</script>
		<div data-role="routemap" data-db="DB_DATA" data-unit="50"></div>
	</div>]]></html>
	</example>
	<category slug="widgets"/>
</entry>
